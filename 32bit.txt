.MODEL SMALL
.386
.DATA
MES1 DB 13,10,'ENTER FIRST NUMBER : $' 
MES2 DB 13,10,'ENTER SECOND NUMBER : $' 
MES3 DB 13,10,'32 ADDITION IS : $'

.CODE
.STARTUP

MOV AH,09H
MOV DX, OFFSET MES1 
INT 21H

MOV CX,8
I1: 
SHL EBX,4 
MOV AH,1 
INT 21H 
SUB AL,30H 
ADD BL,AL 
LOOP I1

MOV ESI,EBX
MOV EBX,00000000H

MOV AH,09H
MOV DX, OFFSET MES2 
INT 21H

MOV CX,8
I2: 
SHL EBX,4 
MOV AH,1 
INT 21H 
SUB AL,30H 
ADD BL,AL 
LOOP I2

MOV AH,09H
MOV DX, OFFSET MES3
 
INT 21H

MOV EAX,ESI 
ADD EAX,EBX 
CALL DISPH


.EXIT


DISPH PROC NEAR
 PUSH EBX
PUSH ECX 
MOV CL,4 
MOV CH,8

DISPH1:
ROL EAX,CL 
PUSH EAX 
AND AL,0FH 
ADD AL,30H 
CMP AL,'9' 
JBE DISPH2 
ADD AL,7

DISPH2:
MOV AH,2 
MOV DL,AL 
INT 21H 
POP EAX 
DEC CH 
JNZ DISPH1 
POP ECX 
POP EBX 
RET

DISPH	ENDP END






B.	SUB two 32 bit binary number

.MODEL SMALL
 
.386
.DATA
MES1 DB 13,10,'ENTER FIRST NUMBER  : $' 
MES2 DB 13,10,'ENTER SECOND NUMBER : $' 
MES3 DB 13,10,'32 BIT BCD SUBTRACTION IS : $'

.CODE
.STARTUP

MOV AH,09H
MOV DX, OFFSET MES1 
INT 21H

MOV CX,8
I1: 
SHL EBX,4 
MOV AH,1 
INT 21H 
SUB AL,30H 
ADD BL,AL 
LOOP I1

MOV ESI,EBX 
MOV EBX,0

MOV AH,09H
MOV DX, OFFSET MES2 
INT 21H

MOV CX,8
I2: 
SHL EBX,4 
MOV AH,1 
INT 21H 
SUB AL,30H 
ADD BL,AL 
LOOP I2

MOV AH,09H
MOV DX, OFFSET MES3 
INT 21H

MOV EAX,ESI 
SUB EAX,EBX 
CALL DISPH
 
.EXIT


DISPH PROC NEAR 
PUSH EBX
PUSH ECX 
MOV CL,4 
MOV CH,8

DISPH1:
ROL EAX,CL 
PUSH EAX 
AND AL,0FH 
ADD AL,30H 
CMP AL,'9' 
JBE DISPH2 
ADD AL,7

DISPH2:
MOV AH,2 
MOV DL,AL 
INT 21H 
POP EAX 
DEC CH 
JNZ DISPH1 
POP ECX 
POP EBX 
RET

DISPH	ENDP END


C.	MUL two 32 bit Binary Numbers

.MODEL SMALL
.386
.DATA
MES1 DB 13,10,'ENTER FIRST NUMBER : $' 
MES2 DB 13,10,'ENTER SECOND NUMBER : $' 
MES3 DB 13,10,'PRODUCT IS : $'

.CODE
.STARTUP
 

MOV AH,09H
MOV DX, OFFSET MES1 
INT 21H

MOV CX,8
I1: 
SHL EBX,4 
MOV AH,1 
INT 21H 
SUB AL,30H 
ADD BL,AL 
LOOP I1

MOV ESI,EBX 
MOV EBX,0

MOV AH,09H
MOV DX, OFFSET MES2 
INT 21H

MOV CX,8
I2: 
SHL EBX,4 
MOV AH,1 
INT 21H 
SUB AL,30H 
ADD BL,AL 
LOOP I2

MOV AH,09H
MOV DX, OFFSET MES3 
INT 21H

MOV EAX,ESI 
MUL EBX 
MOV ECX,EAX 
MOV EAX,EDX 
CALL DISPH 
MOV EAX,ECX 
CALL DISPH


.EXIT


DISPH	PROC NEAR
 

PUSH EBX 
PUSH ECX 
MOV CL,4 
MOV CH,8

DISPH1:
ROL EAX,CL 
PUSH EAX 
AND AL,0FH 
ADD AL,30H 
CMP AL,'9' 
JBE DISPH2 
ADD AL,7

DISPH2:
MOV AH,2 
MOV DL,AL 
INT 21H 
POP EAX 
DEC CH 
JNZ DISPH1 
POP ECX 
POP EBX 
RET

DISPH	ENDP END


D.	DIV of two 32 bit Binary Numbers

.MODEL SMALL
.386P

.DATA ;
N1 DD 1234567AH 
N2 DD 11111111H N3 DD ?
N4 DD ? 

COUNT DB 08H

QUOTIENT DB "QUOTIENT:", 10, 13, '$'
REMAINDER DB "REMAINDER:", 10, 13, '$'
 
.CODE ;
.STARTUP ;
MOV AX, @DATA 
MOV DS, AX
MOV EDX, 00000000H 
MOV EAX, N1
DIV N2
MOV N3, EDX 
MOV N4, EAX

MOV DX, OFFSET QUOTIENT 
MOV AH, 09H
INT 21H

MOV EAX, N4 
CALL DISP
MOV DL, 13
MOV AH, 02H 
INT 21H
MOV DL, 10 
MOV AH, 02H 
INT 21H

MOV DX, OFFSET REMAINDER 
MOV AH, 09H
INT 21H

MOV EAX, N3 
CALL DISP 
MOV AH, 4CH 
INT 21H

DISP PROC NEAR 
MOV CL, COUNT 
UP:
ROL EAX, 04H 
MOV BX, AX 
AND AL, 0FH 
CMP AL, 0AH
JNGE NOTGREATER
ADD AL, 07H 
NOTGREATER: 
ADD AL, 30H
MOV DL, AL 
MOV AH, 02H 
INT 21H
 


RET
 
MOV AX, BX 
LOOP UP
 

END
.EXIT
